name: 🛡️ StellarSpeak Site Guardian

on:
  schedule:
    # فحص كل 12 ساعة (منتصف الليل والظهر بتوقيت UTC)
    - cron: '0 */12 * * *'
  
  workflow_dispatch:
    inputs:
      test_type:
        description: 'نوع الفحص'
        required: true
        default: 'full'
        type: choice
        options:
        - quick
        - full
        - telegram-test

jobs:
  site-monitoring:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: mcr.microsoft.com/playwright:v1.49.0-jammy
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: 🗂️ Cache Playwright Browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          playwright-${{ runner.os }}-
    
    - name: 📦 Install Dependencies
      run: npm install -D @playwright/test
      timeout-minutes: 5
    
    - name: 🔍 Debug Environment
      run: |
        echo "🔍 Environment Debug Info:"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Site URL: $SITE_URL"
        echo "Container info:"
        cat /etc/os-release | head -5
        echo "Network test:"
        curl -I $SITE_URL || echo "Curl failed, but proceeding..."
        echo "Playwright version:"
        npx playwright --version || echo "Playwright not found"
      env:
        SITE_URL: https://www.stellarspeak.online
    
    - name: 🛡️ Run Site Guardian Tests
      id: tests
      run: |
        echo "🔍 Starting Playwright tests..."
        
        # تشغيل الاختبارات مع تقارير متعددة
        npx playwright test --reporter=line,json:test-results.json || TEST_EXIT_CODE=$?
        
        echo "📊 Test execution completed with exit code: ${TEST_EXIT_CODE:-0}"
        
        # التحقق من وجود ملف النتائج وطباعة محتوياته
        if [ -f "test-results.json" ]; then
          echo "✅ Test results file created successfully"
          echo "📄 Content preview:"
          head -20 test-results.json || echo "Could not preview file"
          
          # التحقق من صحة JSON
          if node -e "JSON.parse(require('fs').readFileSync('test-results.json', 'utf8'))" 2>/dev/null; then
            echo "✅ JSON file is valid"
          else
            echo "❌ JSON file is invalid, creating fallback"
            echo '{"stats":{"expected":1,"passed":0,"failed":1,"skipped":0},"duration":1000}' > test-results.json
          fi
        else
          echo "❌ Test results file not found, creating fallback"
          # إنشاء ملف نتائج يشير إلى مشكلة تقنية
          echo '{"stats":{"expected":1,"passed":0,"failed":1,"skipped":0},"duration":1000}' > test-results.json
        fi
        
        # التحقق من وجود تقارير Playwright
        if [ -d "playwright-report" ]; then
          echo "✅ Playwright HTML report generated"
          ls -la playwright-report/ | head -5
        else
          echo "⚠️ No HTML report found"
        fi
        
        echo "tests_completed=true" >> $GITHUB_OUTPUT
      env:
        SITE_URL: https://www.stellarspeak.online
        TEST_TYPE: ${{ github.event.inputs.test_type || 'full' }}
        MONITOR_EMAIL: ${{ secrets.MONITOR_EMAIL }}
        MONITOR_PASSWORD: ${{ secrets.MONITOR_PASSWORD }}
      timeout-minutes: 15
    
    - name: 📊 Parse Test Results
      id: parse_results
      run: |
        node -e "
        const fs = require('fs');
        try {
          let results = {};
          let stats = { expected: 0, passed: 0, failed: 0, skipped: 0 };
          
          console.log('🔍 Parsing test results...');
          
          if (fs.existsSync('test-results.json')) {
            const content = fs.readFileSync('test-results.json', 'utf8');
            console.log('📄 Raw content length:', content.length);
            
            if (content.trim()) {
              results = JSON.parse(content);
              stats = results.stats || stats;
              console.log('✅ Successfully parsed results:', JSON.stringify(stats, null, 2));
            } else {
              console.log('⚠️ Empty results file');
            }
          } else {
            console.log('❌ No test results file found');
          }
          
          const total = stats.expected || 0;
          const passed = stats.passed || 0;
          const failed = stats.failed || 0;
          const skipped = stats.skipped || 0;
          const duration = results.duration ? (results.duration / 1000).toFixed(2) : '0';
          
          // تحسين منطق تحديد الحالة
          let status;
          if (total === 0) {
            status = '🔴 NO_TESTS';
          } else if (failed > 0) {
            status = '🔴 FAILED';
          } else if (passed > 0) {
            status = '✅ PASSED';
          } else {
            status = '⚠️ UNKNOWN';
          }
          
          const timestamp = new Date().toLocaleString('ar-SA-u-nu-latn', {timeZone: 'Asia/Riyadh'});
          const runNumber = '${{ github.run_number }}';
          const runId = '${{ github.run_id }}';
          const repoName = '${{ github.repository }}';
          const actor = '${{ github.actor }}';
          const eventName = '${{ github.event_name }}';
          
          let message = '🛡️ *StellarSpeak Site Guardian Report*\\n';
          message += '━━━━━━━━━━━━━━━━━━━━━━\\n\\n';
          
          message += '📊 *نتائج الفحص:*\\n';
          message += '• الحالة: ' + status + '\\n';
          message += '• نجح: ✅ ' + passed + ' اختبار\\n';
          message += '• فشل: ❌ ' + failed + ' اختبار\\n';
          message += '• تم تخطيه: ⏭️ ' + skipped + ' اختبار\\n';
          message += '• المجموع: 📈 ' + total + ' اختبار\\n';
          message += '• مدة التنفيذ: ⏱️ ' + duration + ' ثانية\\n\\n';
          
          message += '🔍 *معلومات الفحص:*\\n';
          message += '• الموقع: 🌐 [stellarspeak.online](https://www.stellarspeak.online)\\n';
          message += '• الوقت: 🕐 ' + timestamp + '\\n';
          message += '• نوع التشغيل: 🔄 ' + (eventName === 'schedule' ? 'تلقائي (كل 12 ساعة)' : 'يدوي') + '\\n';
          message += '• رقم التشغيل: #' + runNumber + '\\n\\n';
          
          if (total === 0) {
            message += '🚨 *خطأ تقني - لم يتم تشغيل اختبارات:*\\n';
            message += '━━━━━━━━━━━━━━━━━━━━━━\\n';
            message += '🔧 مشكلة في إعداد Playwright أو البيئة التشغيلية\\n';
            message += '🌐 قد يكون هناك مشكلة في الوصول للموقع أو Container\\n';
            message += '👨‍💻 يتطلب فحص السجلات التفصيلية والإعدادات\\n';
            message += '⚡ هذا يعني أن الموقع لم يتم فحصه فعلياً\\n\\n';
          } else if (failed > 0) {
            message += '⚠️ *تحذير - مشاكل مكتشفة:*\\n';
            message += '━━━━━━━━━━━━━━━━━━━━━━\\n';
            message += '🔴 تم اكتشاف *' + failed + ' مشكلة* تحتاج فحص فوري!\\n';
            message += '🔍 يُنصح بمراجعة التقرير المفصل للحصول على التفاصيل الكاملة\\n';
            message += '⚡ قد تؤثر هذه المشاكل على تجربة المستخدمين\\n\\n';
          } else if (passed > 0) {
            message += '✅ *ممتاز - الموقع يعمل بشكل مثالي!*\\n';
            message += '━━━━━━━━━━━━━━━━━━━━━━\\n';
            message += '🚀 جميع الاختبارات (' + passed + ') نجحت بلا أي مشاكل\\n';
            message += '💯 الأداء والوظائف تعمل بكفاءة عالية\\n';
            message += '🎯 لا حاجة لأي إجراء في الوقت الحالي\\n\\n';
          } else {
            message += '⚠️ *حالة غير معروفة:*\\n';
            message += '━━━━━━━━━━━━━━━━━━━━━━\\n';
            message += '🔍 تم تشغيل اختبارات لكن بدون نتائج واضحة\\n';
            message += '🔧 يُنصح بمراجعة السجلات والإعدادات\\n\\n';
          }
          
          message += '📋 *روابط مفيدة:*\\n';
          message += '• [عرض التقرير التفصيلي](${{ github.server_url }}/${{ github.repository }}/actions/runs/' + runId + ')\\n';
          message += '• [جميع التشغيلات السابقة](${{ github.server_url }}/${{ github.repository }}/actions)\\n';
          message += '• [الموقع المباشر](https://www.stellarspeak.online)\\n';
          
          fs.writeFileSync('telegram-message.txt', message);
          console.log('status=' + status);
          console.log('passed=' + passed);
          console.log('failed=' + failed);
          console.log('total=' + total);
          
        } catch (error) {
          console.error('❌ Error parsing results:', error.message);
          const errorTime = new Date().toLocaleString('ar-SA-u-nu-latn', {timeZone: 'Asia/Riyadh'});
          const runId = '${{ github.run_id }}';
          
          const errorMessage = '🚨 *خطأ حرج في نظام المراقبة*\\n' +
            '━━━━━━━━━━━━━━━━━━━━━━\\n\\n' +
            '❌ *المشكلة:* فشل في تحليل أو تشغيل الاختبارات\\n' +
            '⏰ *الوقت:* ' + errorTime + '\\n' +
            '🔧 *السبب المحتمل:* خطأ في Playwright أو معالجة البيانات\\n' +
            '⚡ *التأثير:* لم يتم فحص الموقع في هذه الجولة\\n\\n' +
            '📋 *الإجراء المطلوب فوراً:*\\n' +
            '• فحص يدوي عاجل للموقع\\n' +
            '• مراجعة سجلات GitHub Actions التفصيلية\\n' +
            '• التحقق من إعدادات Playwright والـ Container\\n' +
            '• فحص اتصال الموقع والخادم\\n\\n' +
            '🔗 *التفاصيل:*\\n' +
            '[عرض سجلات الخطأ الكاملة](${{ github.server_url }}/${{ github.repository }}/actions/runs/' + runId + ')';
          
          fs.writeFileSync('telegram-message.txt', errorMessage);
          console.log('status=ERROR');
        }
        "
      continue-on-error: true
    
    - name: 🔍 Debug Secrets
      run: |
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "🔍 Checking Telegram Secrets..."
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        
        if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
          TOKEN_LENGTH=$(echo -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" | wc -c)
          echo "✅ TELEGRAM_BOT_TOKEN is set (length: $TOKEN_LENGTH characters)"
        else
          echo "❌ TELEGRAM_BOT_TOKEN is NOT set - Please add it in repository secrets"
        fi
        
        if [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
          echo "✅ TELEGRAM_CHAT_ID is set: ${{ secrets.TELEGRAM_CHAT_ID }}"
        else
          echo "❌ TELEGRAM_CHAT_ID is NOT set - Please add it in repository secrets"
        fi
        
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
      continue-on-error: true
    
    - name: 📤 Send Telegram Notification
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message_file: telegram-message.txt
        format: markdown
        disable_web_page_preview: true
      continue-on-error: true
    
    - name: 📊 Upload Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: site-guardian-report-${{ github.run_number }}
        path: |
          test-results/
          playwright-report/
          test-results.json
          telegram-message.txt
        retention-days: 30

    - name: 🚨 Send Detailed Alert on Critical Failure
      if: failure()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        format: markdown
        message: |
          🚨 *تنبيه عاجل - مشكلة حرجة في الموقع*
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          ❌ *حالة الفحص:* فشل كامل في عملية الفحص
          🔍 *نوع المشكلة:* خطأ تقني حرج في نظام المراقبة
          ⏰ *وقت الاكتشاف:* ${{ github.event.head_commit.timestamp }}
          🌐 *الموقع المتأثر:* [stellarspeak.online](https://www.stellarspeak.online)
          
          📋 *الأسباب المحتملة:*
          • 🔌 مشكلة في الاتصال بالموقع أو الخادم
          • ⚙️ خطأ في Playwright أو Container Environment
          • 🌐 الموقع غير متاح أو بطيء جداً
          • 🔐 مشكلة في بيانات المصادقة
          • 💾 نفاد موارد GitHub Actions أو الخادم
          
          🔧 *الإجراءات المطلوبة فوراً:*
          1️⃣ فحص الموقع يدوياً من المتصفح
          2️⃣ مراجعة سجلات الخادم (Server Logs)
          3️⃣ التحقق من حالة استضافة الموقع
          4️⃣ فحص إعدادات GitHub Actions والـ Container
          5️⃣ مراجعة سكريبت Playwright والتبعيات
          
          📊 *معلومات إضافية:*
          • رقم التشغيل: #${{ github.run_number }}
          • نوع الحدث: ${{ github.event_name }}
          • الفرع: ${{ github.ref_name }}
          
          🔗 *روابط مهمة:*
          • [عرض تفاصيل الخطأ الكاملة](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          • [جميع التشغيلات](${{ github.server_url }}/${{ github.repository }}/actions)
          • [الموقع المباشر](https://www.stellarspeak.online)
          
          ⚠️ *ملاحظة:* يُنصح بحل المشكلة في أقرب وقت ممكن لتجنب تأثيرها على المستخدمين
      continue-on-error: true
